/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

class Solution {
    public boolean hasCycle(ListNode head) {
        HashSet<ListNode> seenNodes = new HashSet<>();
        ListNode current = head;

        while(current != null){
            if (seenNodes.contains(current)){
                return true;
            }
            seenNodes.add(current);
            current = current.next;
        }
        return false;
    }
}
